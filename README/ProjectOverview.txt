PROJECT OVERVIEW:

DungeonCrawler is a text‑based console game where you:
    1. See a dungeon map with you as '@' and monsters as 'C' or 'L'.
    2. Move with w/a/s/d to explore.
    3. Encounter monsters, which triggers combat based on HP.
    4. Defeat monsters to gain their HP and face stronger foes.

Milestones (Levels 1–5)
    [✓] LEVEL 1: Grid generates and prints; player can move '@' inside walls.
    [✓] LEVEL 2: Monsters spawn; collision triggers an encounter.
    [✓] LEVEL 3: HP system implemented; combat decided by HP comparison. A dice-roll duel occurs on a tie.
    [✓] LEVEL 4: Code refactored into a clean class hierarchy (Entity, Player, Monster, etc.).
    [ ] LEVEL 5: (Future) Add more features like inventory, items, more monster types, and saving/loading the game.

Design summary
================
Class Hierarchy
---------------
The project uses an object-oriented design:
- Entity: The base for anything with a position, symbol, and HP.
  - Player: The user-controlled '@'.
  - Monster: An abstract base for enemies.
    - ChaserMonster ('C'): AI chases the player.
    - LooterMonster ('L'): AI flees from the player.

Monster Tiers
-------------
The player starts with 5 HP. Monsters spawn with HP from a list of tiers {5, 10, 15, 20, 25, 30, 40}.
The game spawns monsters with HP in a range related to the player's current HP, ensuring a fair challenge.
When all beatable monster tiers are exhausted, the level is complete.

Collision outcome
-----------------
When the player and a monster occupy the same cell:
1. Player HP > Monster HP:
   - The monster is defeated.
   - The player's HP increases by the monster's HP.
   - A new monster spawns.
2. Player HP < Monster HP:
   - The player is defeated.
   - Game Over.
3. Player HP == Monster HP:
   - A "Duel" begins!
   - Player and monster roll a 6-sided die.
   - The higher roll wins the duel. A tie results in a reroll.
   - Winning the duel has the same outcome as (1).
   - Losing the duel has the same outcome as (2).
